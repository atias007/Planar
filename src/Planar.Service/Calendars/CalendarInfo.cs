using System;
using System.Collections.Generic;
using System.Linq;

namespace Planar.Service.Calendars
{
    public static class CalendarInfo
    {
        public static readonly IReadOnlyDictionary<string, string> Items = new SortedDictionary<string, string>()
        {
            { "IL", "Israel" },
            { "AD", "Andorra" },
            { "AL", "Albania" },
            { "AR", "Argentina" },
            { "AT", "Austria" },
            { "AU", "Australia" },
            { "AX", "Aland" },
            { "BA", "BosniaAndHerzegovina" },
            { "BB", "Barbados" },
            { "BE", "Belgium" },
            { "BG", "Bulgaria" },
            { "BJ", "Benin" },
            { "BO", "Bolivia" },
            { "BR", "Brazil" },
            { "BS", "Bahamas" },
            { "BW", "Botswana" },
            { "BY", "Belarus" },
            { "BZ", "Belize" },
            { "CA", "Canada" },
            { "CH", "Switzerland" },
            { "CL", "Chile" },
            { "CN", "China" },
            { "CO", "Colombia" },
            { "CR", "CostaRica" },
            { "CU", "Cuba" },
            { "CY", "Cyprus" },
            { "CZ", "CzechRepublic" },
            { "DE", "Germany" },
            { "DK", "Denmark" },
            { "DO", "DominicanRepublic" },
            { "EC", "Ecuador" },
            { "EE", "Estonia" },
            { "EG", "Egypt" },
            { "ES", "Spain" },
            { "FI", "Finland" },
            { "FO", "FaroeIslands" },
            { "FR", "France" },
            { "GA", "Gabon" },
            { "GB", "UnitedKingdom" },
            { "GD", "Grenada" },
            { "GI", "Gibraltar" },
            { "GL", "Greenland" },
            { "GM", "Gambia" },
            { "GR", "Greece" },
            { "GT", "Guatemala" },
            { "GG", "Guernsey" },
            { "GY", "Guyana" },
            { "HN", "Honduras" },
            { "HR", "Croatia" },
            { "HT", "Haiti" },
            { "HU", "Hungary" },
            { "IE", "Ireland" },
            { "ID", "Indonesia" },
            { "IM", "IsleOfMan" },
            { "IS", "Iceland" },
            { "IT", "Italy" },
            { "LI", "Liechtenstein" },
            { "LS", "Lesotho" },
            { "LT", "Lithuania" },
            { "LU", "Luxembourg" },
            { "LV", "Latvia" },
            { "JE", "Jersey" },
            { "JM", "Jamaica" },
            { "JP", "Japan" },
            { "KR", "SouthKorea" },
            { "MA", "Morocco" },
            { "MC", "Monaco" },
            { "MD", "Moldova" },
            { "ME", "Montenegro" },
            { "MG", "Madagascar" },
            { "MK", "Macedonia" },
            { "MN", "Mongolia" },
            { "MS", "Montserrat" },
            { "MT", "Malta" },
            { "MX", "Mexico" },
            { "MZ", "Mozambique" },
            { "NA", "Namibia" },
            { "NE", "Niger" },
            { "NG", "Nigeria" },
            { "NI", "Nicaragua" },
            { "NL", "Netherlands" },
            { "NO", "Norway" },
            { "NZ", "NewZealand" },
            { "PA", "Panama" },
            { "PE", "Peru" },
            { "PG", "PapuaNewGuinea" },
            { "PL", "Poland" },
            { "PR", "PuertoRico" },
            { "PT", "Portugal" },
            { "PY", "Paraguay" },
            { "RO", "Romania" },
            { "RS", "Serbia" },
            { "RU", "Russia" },
            { "SE", "Sweden" },
            { "SG", "Singapore" },
            { "SI", "Slovenia" },
            { "SJ", "SvalbardAndJanMayen" },
            { "SK", "Slovakia" },
            { "SM", "SanMarino" },
            { "SR", "Suriname" },
            { "SV", "ElSalvador" },
            { "TN", "Tunisia" },
            { "TR", "Turkey" },
            { "UA", "Ukraine" },
            { "US", "UnitedStates" },
            { "UY", "Uruguay" },
            { "VA", "VaticanCity" },
            { "VE", "Venezuela" },
            { "VN", "Vietnam" },
            { "ZA", "SouthAfrica" },
            { "ZW", "Zimbabwe" }
        };

        public static bool Contains(string value) => Items.Any(kv => string.Equals(kv.Value, value, StringComparison.OrdinalIgnoreCase));
    }
}